
import numpy as np
import time

i = 0
start = time.time()
while True:
    a = np.random.rand(10, 10)
    b = np.random.rand(10, 10)
    c = a - b
    diagonal = np.diagonal(c)
    if np.all(diagonal > -0.1) & np.all(diagonal < 0.1):
        break
    i += 1

end = time.time()
time = end - start
######################################################################
subtract_matrix :
[[-0.02277327 -0.05841422  0.37987438  0.08819367  0.58084348  0.90290214
   0.28151077 -0.20925583 -0.10195909  0.08985064]
 [ 0.04038894 -0.02828484 -0.04998428  0.18944896 -0.32400255 -0.91301958
   0.09522026 -0.07530952 -0.24485911 -0.46370438]
 [-0.16977163  0.32327533  0.04396264  0.30664713  0.43743459  0.20570404
  -0.47442371  0.64242459  0.03650182 -0.5695654 ]
 [-0.5550964  -0.08401157  0.31890598 -0.04137498 -0.09848878  0.79571267
   0.67970585 -0.18957597  0.62761995 -0.23483179]
 [ 0.30131456 -0.14781646 -0.76921635  0.04777237  0.05462347 -0.36220165
   0.48391208  0.24583716 -0.14815785  0.14632816]
 [ 0.46594992 -0.16704613 -0.62042513  0.39202062 -0.06447035 -0.08672782
   0.27433158  0.70971495 -0.3210314  -0.39130383]
 [-0.1685888  -0.38022796  0.59693989  0.65473588  0.35027722 -0.52415038
  -0.09271699  0.15914602  0.36348395 -0.31176432]
 [ 0.53587782 -0.13136866 -0.11074615  0.14648165  0.17766703 -0.18591806
   0.12337165 -0.03570455  0.13871141  0.05400908]
 [-0.52827717 -0.82171538 -0.08583797 -0.01483933  0.31347004  0.11825375
   0.21221391  0.57574891  0.00787583  0.57978998]
 [-0.16349595 -0.11792016  0.15631446  0.11990559 -0.17912866 -0.11188689
   0.46780822  0.43442313 -0.42668108 -0.04318248]]
diagonal :[-0.02277327 -0.02828484  0.04396264 -0.04137498  0.05462347 -0.08672782
 -0.09271699 -0.03570455  0.00787583 -0.04318248]
number_of_loops :11575389
total_time :3.5611528555552163 minutes